/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edubit;

import edubit.*;
import java.awt.Image;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.TableModel;
/**
 *
 * @author ThinkPad
 */
public final class Modules extends javax.swing.JFrame  {

    Connection conn = db.java_db();
    ;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int result;

    /**
     * Creates new form Home_Data
     */
    /**
     * Creates new form Sectors
     */
    public Modules() {
        initComponents();
        SchoolInfo();
        SetTrades();
        SetTrainers();
        loader.setVisible(false);
       loader1.setVisible(false);
       Centralize();

    }

    private void SetTrades() {
        try {
            String query = "SELECT * FROM TRADE";
            Statement st = conn.createStatement();
            rs = st.executeQuery(query);

            while (rs.next()) {
                String data = rs.getString("TRADENAME");
                tradeCombo.addItem(data);
                trd.addItem(data);
            }

        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }

    private void SetTrainers() {
        try {
            String query = "SELECT * FROM SYSUSERS WHERE Division=?";
            String divName = "Trainer";
            pst = conn.prepareStatement(query);
            pst.setString(1, divName);
            rs = pst.executeQuery();

            while (rs.next()) {
                String data = rs.getString("USERNAME");
                trainerCombo.addItem(data);
            }

        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }

    private void SchoolInfo() {
        try {
            pst = conn.prepareStatement("SELECT * FROM SCHOOL_INFO");
            rs = pst.executeQuery();
            if (rs.next()) {
                schoolName.setText(rs.getString("SchoolName"));
                Blob filenameBlob = rs.getBlob("Logo");
                byte[] content = filenameBlob.getBytes(1L, (int) filenameBlob.length());
                ImageIcon ik = new ImageIcon(content);
                Image img = ik.getImage();
                //ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_DEFAULT));
                Image newimg = img.getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_DEFAULT);
                ik = new ImageIcon(newimg);
                lbl_img.setIcon(ik);
            }
        } catch (SQLException e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        moduleData = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cmd_save = new javax.swing.JButton();
        upt = new javax.swing.JButton();
        del = new javax.swing.JButton();
        clr = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        loader = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tradeCombo = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        levels = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        mco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mcre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        trainerCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        mnam = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        trd = new javax.swing.JComboBox<>();
        Genderr1 = new javax.swing.JLabel();
        lvl = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        mid = new javax.swing.JTextField();
        loader1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_emp = new javax.swing.JLabel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        lbl_img = new javax.swing.JLabel();
        schoolName = new javax.swing.JLabel();
        about = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CURRICULUM MODULES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Arabic", 1, 28))); // NOI18N

        moduleData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        moduleData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moduleDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moduleData);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        cmd_save.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\Save-icon.png")); // NOI18N
        cmd_save.setText("Save");
        cmd_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_saveActionPerformed(evt);
            }
        });

        upt.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\update icon.png")); // NOI18N
        upt.setText("Update");
        upt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uptActionPerformed(evt);
            }
        });

        del.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\delete_16x16.gif")); // NOI18N
        del.setText("Delete");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        clr.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\icon_refresh.gif")); // NOI18N
        clr.setText("Reset All");
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("CRUD OPERATIONS");

        loader.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        loader.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\waitloader.gif")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(del, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmd_save, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clr)
                .addGap(20, 20, 20)
                .addComponent(loader)
                .addContainerGap())
        );

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("REGISTER NEW MODULE");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Navigate Module");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Trade");

        tradeCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tradeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        tradeCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                tradeComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        tradeCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tradeComboMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tradeComboMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tradeComboMouseReleased(evt);
            }
        });
        tradeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeComboActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Level");

        levels.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        levels.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                levelsPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Module Code");

        mco.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Module Credits");

        mcre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Trainer");

        trainerCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        trainerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Module Name");

        mnam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Trade");

        trd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        trd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        trd.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                trdPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        Genderr1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Genderr1.setText("Level:");

        lvl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lvlActionPerformed(evt);
            }
        });

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Module Indicator");

        mid.setEditable(false);
        mid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                midMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                midMousePressed(evt);
            }
        });

        loader1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        loader1.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\waitloader.gif")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(levels, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tradeCombo, 0, 233, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(mcre))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mnam, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(mco)
                            .addComponent(trainerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(mid))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel17))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(trd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Genderr1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lvl, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loader1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loader1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Genderr1)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lvl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addGap(157, 157, 157))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(tradeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(levels, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(trainerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mco, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mnam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mcre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addComponent(jSeparator4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(55, 60, 68));
        jPanel2.setForeground(java.awt.Color.darkGray);
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 182, 320, 0));

        jLabel14.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\Copy of cover_photo.png")); // NOI18N
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 370, 160));

        jLabel19.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\ssss\\rptech.png")); // NOI18N
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 200, 120));
        jPanel2.add(txt_emp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jDesktopPane2.setLayer(lbl_img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_img, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_img, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jDesktopPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 180, 130));

        schoolName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        schoolName.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(schoolName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 420, 30));

        about.setBackground(new java.awt.Color(204, 204, 0));
        about.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        about.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\closer.png")); // NOI18N
        about.setText("Close");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        jPanel2.add(about, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 150, -1, 30));

        jMenu1.setText("Modules");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem4.setText("Add Learning Units");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon("C:\\Users\\ThinkPad\\Documents\\NetBeansProjects\\RPEMS\\images\\delete_16x16.gif")); // NOI18N
        jMenuItem3.setText("Close Window");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int trdId, levId, uid;
    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_saveActionPerformed
        String trade = (String) tradeCombo.getSelectedItem();
        String level = (String) levels.getSelectedItem();
        String trainer = (String) trainerCombo.getSelectedItem();
        String modCode = mco.getText();

        String credits = mcre.getText();
        String modName = mnam.getText();
        if (trade.equals("Select") || level.isEmpty() || trainer.equals("Select") || modCode.isEmpty() || credits.isEmpty() || modName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty Field/s", "BR Software Resolution", 0);
        } else {

            int confirm = JOptionPane.showConfirmDialog(null, "You have Prepared \n " + modName + " \n to be Saved in " + level + " " + trade, "BR Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == 0) {
                SwingWorker<Void, String> mySwingWorker;
                mySwingWorker = new SwingWorker<Void, String>() {
                    @Override
                    public Void doInBackground() throws InterruptedException {
                        addModule();

                        Thread.sleep(500);
                        return null;
                    }
                };
                JButton btns[] = {upt, del, clr};
                String waitMsg = "Loading...";
                PleaseWait x = new PleaseWait();
                x.geekExecute(evt, mySwingWorker, loader, waitMsg, btns);
            }

        }
    }//GEN-LAST:event_cmd_saveActionPerformed

    private void uptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uptActionPerformed
        String trade = (String) tradeCombo.getSelectedItem();
        String level = (String) levels.getSelectedItem();
        String trainer = (String) trainerCombo.getSelectedItem();
        String modCode = mco.getText();
        String credits = mcre.getText();
        String modName = mnam.getText();
        if (trade.equals("Select") || level.isEmpty() || trainer.equals("Select") || modCode.isEmpty() || credits.isEmpty() || modName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty Field/s", "BR Software Resolution", 0);
        } else {

            int confirm = JOptionPane.showConfirmDialog(null, "You have attempted Changes! now \n " + modName + " \n is going to be Committed in " + level + " " + trade, "BR Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == 0) {
                SwingWorker<Void, String> mySwingWorker;
                mySwingWorker = new SwingWorker<Void, String>() {
                    @Override
                    public Void doInBackground() throws InterruptedException {
                        updateModule();

                        Thread.sleep(500);
                        return null;
                    }
                };
                JButton btns[] = {upt, del, clr};
                String waitMsg = "Loading...";
                PleaseWait x = new PleaseWait();
                x.geekExecute(evt, mySwingWorker, loader, waitMsg, btns);
            }

        }

    }//GEN-LAST:event_uptActionPerformed
    int realId;
    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        String trade = (String) tradeCombo.getSelectedItem();
        String level = (String) levels.getSelectedItem();
        String trainer = (String) trainerCombo.getSelectedItem();
        String modCode = mco.getText();
        String credits = mcre.getText();
        String modName = mnam.getText();

        if (trade.equals("Select") || level.isEmpty() || trainer.equals("Select") || modCode.isEmpty() || credits.isEmpty() || modName.isEmpty()||mid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty Field/s", "BR Software Resolution", 0);
        } else {

            int confirm = JOptionPane.showConfirmDialog(null, "Sure to Continue Deletion", "BR Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == 0) {
                SwingWorker<Void, String> mySwingWorker;
                mySwingWorker = new SwingWorker<Void, String>() {
                    @Override
                    public Void doInBackground() throws InterruptedException {
                        deleteModule();

                        Thread.sleep(500);
                        return null;
                    }
                };
                JButton btns[] = {upt, del, clr};
                String waitMsg = "Loading...";
                PleaseWait x = new PleaseWait();
                x.geekExecute(evt, mySwingWorker, loader, waitMsg, btns);
            }
        }

    }//GEN-LAST:event_delActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrActionPerformed
        ClearFields();
    }//GEN-LAST:event_clrActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new LUnits().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void moduleDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moduleDataMouseClicked
        cmd_save.setEnabled(false);
        int[] StudentRow = moduleData.getSelectedRows();
        int row = StudentRow[0];
        Object identity = moduleData.getValueAt(row, 0);
        String id = String.valueOf(identity);
        int value = Integer.parseInt(id);
        Search(value);

    }//GEN-LAST:event_moduleDataMouseClicked

    private void tradeComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_tradeComboPopupMenuWillBecomeInvisible

        levels.removeAllItems();
        PopUp2();
    }//GEN-LAST:event_tradeComboPopupMenuWillBecomeInvisible

    private void tradeComboMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tradeComboMouseExited

    }//GEN-LAST:event_tradeComboMouseExited

    private void tradeComboMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tradeComboMousePressed
        // SetTrades();
    }//GEN-LAST:event_tradeComboMousePressed

    private void tradeComboMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tradeComboMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeComboMouseReleased

    private void tradeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeComboActionPerformed

    private void levelsPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_levelsPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_levelsPopupMenuWillBecomeInvisible

    private void trdPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_trdPopupMenuWillBecomeInvisible
        lvl.removeAllItems();
        PopUp();
    }//GEN-LAST:event_trdPopupMenuWillBecomeInvisible

    private void lvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lvlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lvlActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
             SwingWorker<Void, String> mySwingWorker;
                mySwingWorker = new SwingWorker<Void, String>() {
                    @Override
                    public Void doInBackground() throws InterruptedException {
                        LookUp();
                        Thread.sleep(500);
                        return null;
                    }
                };
                JButton btns[] = {};
                String waitMsg = "Loading...";
                PleaseWait x = new PleaseWait();
                x.geekExecute(evt, mySwingWorker, loader1, waitMsg, btns);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void midMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_midMouseClicked
        JOptionPane.showMessageDialog(null, "ID IS AUTO-GENERATED", "BR Warning", JOptionPane.WARNING_MESSAGE);

    }//GEN-LAST:event_midMouseClicked

    private void midMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_midMousePressed
        JOptionPane.showMessageDialog(null, "ID IS AUTO-GENERATED", "BR Warning", JOptionPane.WARNING_MESSAGE);

    }//GEN-LAST:event_midMousePressed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        this.dispose();
    }//GEN-LAST:event_aboutActionPerformed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        //        // TODO add your handling code here:
        //        int x = evt.getXOnScreen();
        //        int y = evt.getYOnScreen();
        //        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        //        // TODO add your handling code here:
        //        xx = evt.getX();
        //        xy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modules().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Genderr1;
    private javax.swing.JButton about;
    private javax.swing.JButton clr;
    private javax.swing.JButton cmd_save;
    private javax.swing.JButton del;
    private javax.swing.JButton jButton5;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JComboBox<String> levels;
    private javax.swing.JLabel loader;
    private javax.swing.JLabel loader1;
    private javax.swing.JComboBox<String> lvl;
    private javax.swing.JTextField mco;
    private javax.swing.JTextField mcre;
    private javax.swing.JTextField mid;
    private javax.swing.JTextField mnam;
    private javax.swing.JTable moduleData;
    private javax.swing.JLabel schoolName;
    private javax.swing.JComboBox<String> tradeCombo;
    private javax.swing.JComboBox<String> trainerCombo;
    private javax.swing.JComboBox<String> trd;
    private javax.swing.JLabel txt_emp;
    private javax.swing.JButton upt;
    // End of variables declaration//GEN-END:variables

    private void ClearFields() {
        mid.setText("");
        tradeCombo.removeAllItems();
        trd.removeAllItems();
        tradeCombo.addItem("Select");
        trd.addItem("Select");
        SetTrades();
        levels.removeAllItems();
        lvl.removeAllItems();
        trainerCombo.removeAllItems();
        trainerCombo.addItem("Select");
        SetTrainers();
        mco.setText("");
        mcre.setText("");
        mnam.setText("");
        cmd_save.setEnabled(true);
        moduleData.clearSelection();
       moduleData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));

    }
    int realValue;

    private void PopUp2() {
        String tmp = (String) tradeCombo.getSelectedItem();
        String sql = "SELECT TRADEID FROM TRADE WHERE TRADENAME=?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, tmp);
            rs = pst.executeQuery();
            if (rs.next()) {
                realValue = rs.getInt("TRADEID");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                String sql2 = "SELECT * FROM LEVELS WHERE TRADEID=?";
                pst = conn.prepareStatement(sql2);
                pst.setInt(1, realValue);
                rs = pst.executeQuery();

                while (rs.next()) {

                    String add1 = rs.getString("LEVEL");

                    levels.addItem(add1);

                }
                if (tmp.equals("Select")) {
                    levels.removeAllItems();

                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private void Search(int id) {

        String sql = "SELECT MID,TRADE.TRADENAME,levels.LEVEL,MCODE,ModuleName,CREDITS,SYSUSERS.USERNAME FROM modules JOIN trade USING(TRADEID) JOIN levels USING(LEVELID)JOIN SYSUSERS USING(USERID) WHERE MID=?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setInt(1, id);
            rs = pst.executeQuery();
            if (rs.next()) {
                int modId = rs.getInt("MID");
                mid.setText(String.valueOf(modId));

                String trade = rs.getString("TRADENAME");
                tradeCombo.removeAllItems();
                tradeCombo.addItem(trade);

                String level = rs.getString("LEVEL");
                levels.removeAllItems();
                levels.addItem(level);

                String modcode = rs.getString("MCODE");
                mco.setText(modcode);

                int credits = rs.getInt("CREDITS");
                mcre.setText(String.valueOf(credits));

                String trainer = rs.getString("USERNAME");
                trainerCombo.removeAllItems();
                trainerCombo.addItem(trainer);

                String module = rs.getString("ModuleName");
                mnam.setText(module);
            }

        } catch (SQLException e) {
            System.out.print("Caught : " + e);
        }
    }

    public void LookUp() {
        String trad = (String) trd.getSelectedItem();
        String levl = (String) lvl.getSelectedItem();

        String query = "SELECT MID,TRADE.TRADENAME,levels.LEVEL,MCODE,CREDITS,SYSUSERS.USERNAME FROM modules JOIN trade USING(TRADEID) JOIN levels USING(LEVELID)JOIN SYSUSERS USING(USERID) WHERE TRADENAME=? AND LEVEL=? LIMIT 50";
        try {
            //  String[] cols = {"REGNO", "TRADENAME"};
            pst = conn.prepareStatement(query);
            pst.setString(1, trad);
            pst.setString(2, levl);
            rs = pst.executeQuery();

            moduleData.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    private void PopUp() {
        String tmp = (String) trd.getSelectedItem();
        String sql = "SELECT TRADEID FROM TRADE WHERE TRADENAME=?";
        try {
            pst = conn.prepareStatement(sql);
            pst.setString(1, tmp);
            rs = pst.executeQuery();
            if (rs.next()) {
                realValue = rs.getInt("TRADEID");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                String sql2 = "SELECT * FROM LEVELS WHERE TRADEID=?";
                pst = conn.prepareStatement(sql2);
                pst.setInt(1, realValue);
                rs = pst.executeQuery();

                while (rs.next()) {

                    String add1 = rs.getString("LEVEL");
                    lvl.addItem(add1);

                }
                if (tmp.equals("Select")) {
                    lvl.removeAllItems();
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private void addModule() {
        String trade = (String) tradeCombo.getSelectedItem();
        String level = (String) levels.getSelectedItem();
        String trainer = (String) trainerCombo.getSelectedItem();
        String modCode = mco.getText();

        String credits = mcre.getText();
        String modName = mnam.getText();
        int crd = Integer.parseInt(credits);
        String que1 = "SELECT TRADEID FROM TRADE WHERE TRADENAME=?";
        String que2 = "SELECT LEVELID FROM LEVELS WHERE LEVEL=?";
        String que3 = "SELECT USERID FROM SYSUSERS WHERE USERNAME=?";
        String masterQuery = "INSERT INTO MODULES (TRADEID,LEVELID,MCODE,MODULENAME,CREDITS,USERID)VALUES(?,?,?,?,?,?)";

        try {
            pst = conn.prepareStatement(que1);
            pst.setString(1, trade);
            rs = pst.executeQuery();
            if (rs.next()) {
                trdId = rs.getInt("TRADEID");
            }

            pst = conn.prepareStatement(que2);
            pst.setString(1, level);
            rs = pst.executeQuery();
            if (rs.next()) {
                levId = rs.getInt("LEVELID");
            }

            pst = conn.prepareStatement(que3);
            pst.setString(1, trainer);
            rs = pst.executeQuery();
            if (rs.next()) {
                uid = rs.getInt("USERID");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            try {
                pst = conn.prepareStatement(masterQuery);
                pst.setInt(1, trdId);
                pst.setInt(2, levId);
                pst.setString(3, modCode);
                pst.setString(4, modName);
                pst.setInt(5, crd);
                pst.setInt(6, uid);
                int exec = pst.executeUpdate();
                if (exec > 0) {
                    JOptionPane.showMessageDialog(null, "Saved", "BR Soft..", JOptionPane.PLAIN_MESSAGE);
                    ClearFields();
                }
            } catch (SQLException e) {
            }

        }
    }

    private void updateModule() {
        String trade = (String) tradeCombo.getSelectedItem();
        String level = (String) levels.getSelectedItem();
        String trainer = (String) trainerCombo.getSelectedItem();
        String modCode = mco.getText();
        String credits = mcre.getText();
        String modName = mnam.getText();
        int crd = Integer.parseInt(credits);
        String que1 = "SELECT TRADEID FROM TRADE WHERE TRADENAME=?";
        String que2 = "SELECT LEVELID FROM LEVELS WHERE LEVEL=?";
        String que3 = "SELECT USERID FROM SYSUSERS WHERE USERNAME=?";
        String masterQuery = "UPDATE MODULES SET TRADEID=?,LEVELID=?,MCODE=?,MODULENAME=?,CREDITS=?,USERID=? WHERE MID=?";

        try {
            pst = conn.prepareStatement(que1);
            pst.setString(1, trade);
            rs = pst.executeQuery();
            if (rs.next()) {
                trdId = rs.getInt("TRADEID");
            }

            pst = conn.prepareStatement(que2);
            pst.setString(1, level);
            rs = pst.executeQuery();
            if (rs.next()) {
                levId = rs.getInt("LEVELID");
            }

            pst = conn.prepareStatement(que3);
            pst.setString(1, trainer);
            rs = pst.executeQuery();
            if (rs.next()) {
                uid = rs.getInt("USERID");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            try {
                pst = conn.prepareStatement(masterQuery);
                pst.setInt(1, trdId);
                pst.setInt(2, levId);
                pst.setString(3, modCode);
                pst.setString(4, modName);
                pst.setInt(5, crd);
                pst.setInt(6, uid);
                pst.setInt(7, Integer.parseInt(mid.getText()));
                int exec = pst.executeUpdate();
                if (exec > 0) {
                    JOptionPane.showMessageDialog(null, "Updated", "BR Soft..", JOptionPane.PLAIN_MESSAGE);
                    ClearFields();
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

        }
    }

    private void deleteModule() {
        int modId = Integer.parseInt(mid.getText());
        try {
            pst = conn.prepareStatement("DELETE FROM MODULES WHERE MID=?");
            pst.setInt(1, modId);
            int exec = pst.executeUpdate();
            if(exec>0){
            JOptionPane.showMessageDialog(null,"Deleted","BR Resolution",1);
            ClearFields();
            }
            
        } catch (SQLException e) {
        }

    }

    private void Centralize() {
        WindowSetter.sizeWindow(this);
    }
}
